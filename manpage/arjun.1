.\" Text automatically generated by txt2man
.TH arjun 1 "10 Jan 2023" "arjun-2.2.1" "HTTP parameter discovery suite"
.SH NAME
\fBarjun \fP- HTTP parameter discovery suite
\fB
.SH SYNOPSIS
.nf
.fam C
\fBarjun\fP [\fB-h\fP] [\fB-u\fP \fIURL\fP] [\fB-o\fP \fIJSON_FILE\fP] [\fB-oT\fP \fITEXT_FILE\fP] [\fB-oB\fP [\fIBURP_PORT\fP]] [\fB-d\fP \fIDELAY\fP] [\fB-t\fP \fITHREADS\fP] [\fB-w\fP \fIWORDLIST\fP] [\fB-m\fP \fIMETHOD\fP] [\fB-i\fP [\fIIMPORT_FILE\fP]]
      [\fB-T\fP \fITIMEOUT\fP] [\fB-c\fP \fICHUNKS\fP] [\fB-q\fP] [\fB--headers\fP [\fIHEADERS\fP]] [\fB--passive\fP [\fIPASSIVE\fP]] [\fB--stable\fP] [\fB--include\fP \fIINCLUDE\fP] [\fB--disable-redirects\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Arjun can find query parameters for \fIURL\fP endpoints. If you don't get what that means, it's okay, read along.
Web applications use parameters (or queries) to accept user input, take the following example into consideration:
.PP
.nf
.fam C
    http://api.example.com/v1/userinfo?id=751634589

.fam T
.fi
This \fIURL\fP seems to load user information for a specific user id, but what if there exists a parameter named admin which
when set to True makes the endpoint provide more information about the user?
This is what Arjun does, it finds valid HTTP parameters with a huge default dictionary of 25,890 parameter names.
The best part? It takes less than 10 seconds to go through this huge list while making just 50-60 requests to the target. Here's how.
.TP
.B
-
Supports GET/POST/POST-JSON/POST-XML requests
.TP
.B
-
Automatically handles rate limits and timeouts
.TP
.B
-
Export results to: BurpSuite, text or JSON file
.TP
.B
-
Import targets from: BurpSuite, text file or a raw request file
.TP
.B
-
Can passively extract parameters from JS or 3 external sources
.SH OPTIONS
.TP
.B
\fB-h\fP, \fB--help\fP
show this help message and exit.
.TP
.B
\fB-u\fP \fIURL\fP
Target \fIURL\fP.
.TP
.B
\fB-o\fP \fIJSON_FILE\fP, \fB-oJ\fP \fIJSON_FILE\fP
Path for json output file.
.TP
.B
\fB-oT\fP \fITEXT_FILE\fP
Path for text output file.
.TP
.B
\fB-oB\fP [\fIBURP_PORT\fP]
Port for output to Burp Suite Proxy. Default port is 8080.
.TP
.B
\fB-d\fP \fIDELAY\fP
Delay between requests in seconds. (default: 0).
.TP
.B
\fB-t\fP \fITHREADS\fP
Number of concurrent threads. (default: 5).
.TP
.B
\fB-w\fP \fIWORDLIST\fP
Wordlist file path. (default: {arjundir}/db/large.txt).
.TP
.B
\fB-m\fP \fIMETHOD\fP
Request method to use: GET/POST/XML/JSON/\fIHEADERS\fP. (default: GET).
.TP
.B
\fB-i\fP [\fIIMPORT_FILE\fP]
Import target URLs from file.
.TP
.B
\fB-T\fP \fITIMEOUT\fP
HTTP request timeout in seconds. (default: 15).
.TP
.B
\fB-c\fP \fICHUNKS\fP
Chunk size. The number of parameters to be sent at once.
.TP
.B
\fB-q\fP
Quiet mode. No output.
.TP
.B
\fB--headers\fP [\fIHEADERS\fP]
Add headers. Separate multiple headers with a new line.
.TP
.B
\fB--passive\fP [\fIPASSIVE\fP]
Collect parameter names from passive sources like wayback, commoncrawl and otx.
.TP
.B
\fB--stable\fP
Prefer stability over speed.
.TP
.B
\fB--include\fP \fIINCLUDE\fP
Include this data in every request.
.TP
.B
\fB--disable-redirects\fP
disable redirects.
.SH EXAMPLES
\fBarjun\fP \fB-h\fP
.PP
\fBarjun\fP \fB-u\fP http://site.example.com/test.php
.PP
\fBarjun\fP \fB-u\fP http://site.example.com/test.php \fB-o\fP test.json
.PP
\fBarjun\fP \fB-u\fP http://site.example.com \fB-t\fP 5
.PP
\fBarjun\fP \fB-u\fP http://site.example.com \fB--stable\fP
.RE
.PP

.SH AUTHOR
Written by Somdev Sangwan <s0md3v@gmail.com>
.PP
This manual page was written by Guilherme de Paula Xavier Segundo
<guilherme.lnx@gmail.com> for the Debian project (but may be used by others).
